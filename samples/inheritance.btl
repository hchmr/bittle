extern func printf(fmt: *Char, ...): Int32;

enum ShapeKind {
    Shape_Rectangle,
    Shape_Circle,
}

struct Shape {
    kind: ShapeKind,
}

struct Rectangle: Shape {
    kind = Shape_Rectangle,
    width: Int,
    height: Int,
}

struct Circle: Shape {
    kind = Shape_Circle,
    radius: Int,
}

func area(shape: *Shape): Int {
    if (shape.kind == Shape_Rectangle) {
        var rect = shape as *Rectangle;
        return rect.width * rect.height;
    } else if (shape.kind == Shape_Circle) {
        var circle = shape as *Circle;
        return 3 * circle.radius * circle.radius; // Approximation
    } else {
        return -1;
    }
}

func main(): Int32 {
    var rect = Rectangle { width: 10, height: 20 };
    var circle = Circle { radius: 7 };

    printf("Rectangle area: %d\n", area(&rect));
    printf("Circle area: %d\n", area(&circle));
    return 0;
}
