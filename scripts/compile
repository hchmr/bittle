#!/bin/bash

set -eu

usage() {
  cat <<HERE
Usage: $0 [options] <file>

Compiles a Bittle file.

Options:
  -h, --help           Show this help
  -o, --output <file>  Output file to generate
  -S                   Stop after compilation; do not assemble
  -c                   Stop after compilation and assembly; do not link
HERE
}

short_usage() {
  cat <<HERE
Usage: $0 [options] <file>

For full usage, run: $0 --help
HERE
}

arg_error() {
  echo "Error: $1" >&2
  short_usage >&2
  exit 1
}

input_file=
output_file=
stop_after_compile=false
stop_after_assemble=false

while test $# -gt 0; do
  case "$1" in
  -h | --help)
    usage
    exit 0
    ;;
  -o | --output)
    shift
    output_file="$1"
    ;;
  -S)
    stop_after_compile=true
    ;;
  -c)
    stop_after_assemble=true
    ;;
  *)
    if [ -n "$input_file" ]; then
      arg_error "Unexpected argument: $1"
    fi
    input_file="$1"
    ;;
  esac
  shift
done

if [ -z "$input_file" ]; then
  arg_error "No input file specified"
fi

if ! command -v bittlec >/dev/null 2>&1; then
  echo "Error: No Bittle compiler found in PATH" >&2
  exit 1
fi

out_dir=.
if [ -n "$output_file" ]; then
  out_dir=$(dirname "$output_file")
fi

asm_file="$out_dir/$(basename "$input_file" .btl).s"
obj_file="$out_dir/$(basename "$input_file" .btl).o"
exe_file="${output_file:-$out_dir/a.out}"

# Compile

if [ "$stop_after_compile" = true ] && [ -n "$output_file" ]; then
  asm_file="$output_file"
fi
echo "Compiling $input_file to $asm_file"
bittlec "$input_file" >"$asm_file"

if [ "$stop_after_compile" = true ]; then
  exit 0
fi

if [ "$stop_after_assemble" = true ] && [ -n "$output_file" ]; then
  obj_file="$output_file"
fi
echo "Assembling $asm_file to $obj_file"
gcc -g -c -o "$obj_file" "$asm_file"

if [ "$stop_after_assemble" = true ]; then
  exit 0
fi

echo "Linking $obj_file to $exe_file"
gcc -g -o "$exe_file" "$obj_file"
