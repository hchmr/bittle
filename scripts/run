#!/bin/bash

set -eu

usage() {
  cat <<HERE
Usage: $0 [options] <file> [--] [<args>...]

Compiles and runs a Bittle file.

Options:
  -h, --help           Show this help.
  -o, --output <file>  Output file to generate.
  <file>               Source file to run.
  --                   End of options.

<args>...              Arguments to pass to the program.

Examples:
  $0 /src/main.btl
  $0 /src/wc.btl -o /bin/wc
  $0 /src/wc.btl -- documents/*.txt
HERE
}

short_usage() {
  cat <<HERE
Usage: $0 [options] <source-file> [--] [<args>...]

For full usage, run: $0 --help
HERE
}

arg_error() {
  echo "Error: $1" >&2
  short_usage >&2
  exit 1
}

script_dir=$(dirname "$0")

input_file=
output_file=

while test $# -gt 0 ; do
  case "$1" in
    -h | --help)
      usage
      exit 0
      ;;
    -o | --output)
      shift
      output_file="$1"
      ;;
    --)
      shift
      break
      ;;
    *)
      if [ -n "$input_file" ] ; then
        arg_error "Unexpected argument: $1"
      fi
      input_file="$1"
      ;;
  esac
  shift
done

if [ -z "$input_file" ] ; then
  arg_error "No input file specified"
fi

if [ -z "$output_file" ]; then
  build_name=$(basename "$input_file" .btl)
  output_dir=$(mktemp -d -t "bittle-run-XXXXX")
  output_file="$output_dir/$build_name"
fi

"$script_dir/compile" -o "$output_file" "$input_file" 1>&2

echo "Running $output_file" 1>&2
"$output_file" "$@"
