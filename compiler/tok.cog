include "cog.cogs";

func not_found(kind: Int32): ! {
    fprintf(stderr, "\n*** Unreachable: Unknown token kind %d\n", kind);
    exit(1);
}

func pretty_tok_kind(kind: Int32): *Char {
    return kind == Tok_Eof ? "<eof>"
        // Identifier
        : kind == Tok_Ident ? "identifier"
        // Literals
        : kind == Tok_Int ? "integer"
        : kind == Tok_String ? "string"
        : kind == Tok_Char ? "character"
        // Keywords
        : kind == Tok_As ? "'as'"
        : kind == Tok_Break ? "'break'"
        : kind == Tok_Const ? "'const'"
        : kind == Tok_Continue ? "'continue'"
        : kind == Tok_Else ? "'else'"
        : kind == Tok_Enum ? "'enum'"
        : kind == Tok_Extern ? "'extern'"
        : kind == Tok_False ? "'false'"
        : kind == Tok_For ? "'for'"
        : kind == Tok_Func ? "'func'"
        : kind == Tok_If ? "'if'"
        : kind == Tok_Include ? "'include'"
        : kind == Tok_Null ? "'null'"
        : kind == Tok_Return ? "'return'"
        : kind == Tok_Sizeof ? "'sizeof'"
        : kind == Tok_Struct ? "'struct'"
        : kind == Tok_True ? "'true'"
        : kind == Tok_Var ? "'var'"
        : kind == Tok_While ? "'while'"
        // Symbols
        : kind == Tok_LParen ? "'('"
        : kind == Tok_RParen ? "')'"
        : kind == Tok_LBrace ? "'{'"
        : kind == Tok_RBrace ? "'}'"
        : kind == Tok_LBracket ? "'['"
        : kind == Tok_RBracket ? "']'"
        : kind == Tok_Comma ? "','"
        : kind == Tok_Semicolon ? "';'"
        : kind == Tok_Dot ? "'.'"
        : kind == Tok_DotDot ? "'..'"
        : kind == Tok_DotDotDot ? "'...'"
        : kind == Tok_Colon ? "':'"
        : kind == Tok_ColonColon ? "'::'"
        : kind == Tok_Arrow ? "'->'"
        : kind == Tok_Plus ? "'+'"
        : kind == Tok_PlusEq ? "'+='"
        : kind == Tok_Minus ? "'-'"
        : kind == Tok_MinusEq ? "'-='"
        : kind == Tok_Star ? "'*'"
        : kind == Tok_StarEq ? "'*='"
        : kind == Tok_Slash ? "'/'"
        : kind == Tok_SlashEq ? "'/='"
        : kind == Tok_Percent ? "'%'"
        : kind == Tok_PercentEq ? "'%='"
        : kind == Tok_Amp ? "'&'"
        : kind == Tok_AmpEq ? "'&='"
        : kind == Tok_AmpAmp ? "'&&'"
        : kind == Tok_Bar ? "'|'"
        : kind == Tok_BarEq ? "'|='"
        : kind == Tok_BarBar ? "'||'"
        : kind == Tok_Caret ? "'^'"
        : kind == Tok_CaretEq ? "'^='"
        : kind == Tok_Bang ? "'!'"
        : kind == Tok_Tilde ? "'~'"
        : kind == Tok_Question ? "'?'"
        : kind == Tok_Lt ? "'<'"
        : kind == Tok_LtLtEq ? "'<<='"
        : kind == Tok_LtLt ? "'<<'"
        : kind == Tok_LtEq ? "'<='"
        : kind == Tok_Gt ? "'>'"
        : kind == Tok_GtEq ? "'>='"
        : kind == Tok_GtGt ? "'>>'"
        : kind == Tok_GtGtEq ? "'>>='"
        : kind == Tok_Eq ? "'='"
        : kind == Tok_EqEq ? "'=='"
        : kind == Tok_BangEq ? "'!='"
        : not_found(kind);
}
